<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyName>Wasmtime.Dotnet</AssemblyName>
    <PackageId>Wasmtime</PackageId>
    <Version>$(WasmtimePackageVersion)</Version>
    <Authors>Peter Huene</Authors>
    <Owners>Peter Huene</Owners>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <RepositoryUrl>https://github.com/bytecodealliance/wasmtime-dotnet</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <PackageReleaseNotes>Update Wasmtime to 0.40.0.</PackageReleaseNotes>
    <Summary>A .NET API for Wasmtime, a standalone WebAssembly runtime</Summary>
    <PackageTags>webassembly, .net, wasm, wasmtime</PackageTags>
    <Title>Wasmtime</Title>
    <PackageDescription>
A .NET embedding of Wasmtime.

Wasmtime is a standalone runtime for WebAssembly, using the Cranelift JIT compiler.

The .NET embedding of Wasmtime enables .NET code to instantiate WebAssembly modules and to interact with them in-process.
    </PackageDescription>
    <PackageLicenseExpression>Apache-2.0 WITH LLVM-exception</PackageLicenseExpression>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="DownloadWasmtime" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <BaseURL>https://github.com/bytecodealliance/wasmtime/releases/download</BaseURL>
      <ReleaseURLBase Condition="'$(DevBuild)'=='true'">$(BaseURL)/dev</ReleaseURLBase>
      <ReleaseURLBase Condition="'$(ReleaseURLBase)'==''">$(BaseURL)/v$(WasmtimeVersion)</ReleaseURLBase>
      <ReleaseFileNameBase Condition="'$(DevBuild)'=='true'">wasmtime-dev</ReleaseFileNameBase>
      <ReleaseFileNameBase Condition="'$(ReleaseFileNameBase)'==''">wasmtime-v$(WasmtimeVersion)</ReleaseFileNameBase>
    </PropertyGroup>

    <ItemGroup Condition="'$(Packing)' == 'true' Or $([MSBuild]::IsOsPlatform('Linux'))">
      <WasmtimeDownload Include="linux-x86_64" Condition="'$(Packing)' == 'true' Or '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
        <OS>linux</OS>
        <Arch>x86_64</Arch>
        <RID>linux-x64</RID>
        <FileExtension>tar.xz</FileExtension>
        <LibraryFilename>libwasmtime.so</LibraryFilename>
      </WasmtimeDownload>
      <WasmtimeDownload Include="linux-aarch64" Condition="'$(Packing)' == 'true' Or '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">
        <OS>linux</OS>
        <Arch>aarch64</Arch>
        <RID>linux-arm64</RID>
        <FileExtension>tar.xz</FileExtension>
        <LibraryFilename>libwasmtime.so</LibraryFilename>
      </WasmtimeDownload>
    </ItemGroup>

    <ItemGroup Condition="'$(Packing)' == 'true' Or $([MSBuild]::IsOsPlatform('OSX'))">
      <WasmtimeDownload Include="macos-x86_64" Condition="'$(Packing)' == 'true' Or '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
        <OS>macos</OS>
        <Arch>x86_64</Arch>
        <RID>osx-x64</RID>
        <FileExtension>tar.xz</FileExtension>
        <LibraryFilename>libwasmtime.dylib</LibraryFilename>
      </WasmtimeDownload>
      <WasmtimeDownload Include="macos-aarch64" Condition="'$(Packing)' == 'true' Or '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">
        <OS>macos</OS>
        <Arch>aarch64</Arch>
        <RID>osx-arm64</RID>
        <FileExtension>tar.xz</FileExtension>
        <LibraryFilename>libwasmtime.dylib</LibraryFilename>
      </WasmtimeDownload>
    </ItemGroup>

    <ItemGroup Condition="'$(Packing)' == 'true' Or $([MSBuild]::IsOsPlatform('Windows'))">
      <WasmtimeDownload Include="windows-x86_64" Condition="'$(Packing)' == 'true' Or '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
        <OS>windows</OS>
        <Arch>x86_64</Arch>
        <RID>win-x64</RID>
        <FileExtension>zip</FileExtension>
        <LibraryFilename>wasmtime.dll</LibraryFilename>
      </WasmtimeDownload>
    </ItemGroup>

    <DownloadFile
      Condition="!Exists('$(IntermediateOutputPath)/$(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api.%(WasmtimeDownload.FileExtension)')"
      SourceUrl="$(ReleaseURLBase)/$(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api.%(WasmtimeDownload.FileExtension)"
      DestinationFolder="$(IntermediateOutputPath)"
      SkipUnchangedFiles="true"
    />

    <!-- Workaround for https://github.com/msys2/MSYS2-packages/issues/1548 -->
    <Exec
      Condition="%(WasmtimeDownload.FileExtension) == 'tar.xz' And !Exists('$(IntermediateOutputPath)$(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api')"
      Command="xz --decompress --stdout $(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api.%(WasmtimeDownload.FileExtension) | tar xf -"
      WorkingDirectory="$(IntermediateOutputPath)"
      StandardOutputImportance="Low"
      StandardErrorImportance="Low"
    />
    <Exec
      Condition="%(WasmtimeDownload.FileExtension) == 'zip' And !Exists('$(IntermediateOutputPath)$(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api')"
      Command="unzip $(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api.%(WasmtimeDownload.FileExtension)"
      WorkingDirectory="$(IntermediateOutputPath)"
      StandardOutputImportance="Low"
      StandardErrorImportance="Low"
    />

    <ItemGroup>
      <Content Include="$(IntermediateOutputPath)$(ReleaseFileNameBase)-%(WasmtimeDownload.Arch)-%(WasmtimeDownload.OS)-c-api/lib/%(WasmtimeDownload.LibraryFilename)">
        <PackagePath>runtimes/%(WasmtimeDownload.RID)/native/lib/%(WasmtimeDownload.LibraryFilename)</PackagePath>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Link>%(WasmtimeDownload.LibraryFilename)</Link>
      </Content>
    </ItemGroup>

  </Target>

</Project>
